# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main","dev" ]
  pull_request:
    branches: [ "main","dev" ]
  workflow_dispatch:

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  flutter-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Repository
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v3.3.0
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: 'gradle'
      - uses: subosito/flutter-action@v2.8.0
        with:
          channel: 'stable'
          architecture: x64
          cache: true
      - run: flutter pub get
      - run: flutter test
     # - run: flutter build apk
      #- run: flutter build appbundle
      #- run: |
       #       echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
        #      echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
        #      echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
         #     echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
          #    echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
        #shell: bash
        
      # Upload java artifacts
      #- name: Upload build artifacts
       # uses: actions/upload-artifact@v3.1.1
        #with:
         # name: rsd-java-src
          #path: |
           #     ${{github.workspace}}/protobuf-rsd-gen/java-src
                
                
  # This workflow contains a single job called "build"
  android-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: "Build Flutter Android"
    needs: [flutter-test]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Repository
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v3.3.0
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: 'gradle'
      - uses: subosito/flutter-action@v2.8.0
        with:
          channel: 'stable'
          architecture: x64
          cache: true
      - run: flutter pub get
      - run: flutter clean
      - run: flutter build apk
      - run: flutter build appbundle
      - run: |
              echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
              echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
              echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
              echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
              echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
        shell: bash      
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: RSD
          path: build/app/outputs/bundle/release/*.aab, build/app/outputs/bundle/release/*.apk
      
  ios-build:
    name: "Build Flutter (iOS)"
    needs: [flutter-test]
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        architecture: x64
    - run: flutter pub get
    - run: flutter clean
    - run: flutter build ios --release --no-codesign
#     - uses: actions/upload-artifact@master
#       with:
#         name: RSD
#         path: build/app/outputs/bundle/release/*.aab
    
  release-assets:
    runs-on: ubuntu-latest
    needs: [android-build,ios-build]
    steps:
      - name: "Download Artificat"
        uses: actions/download-artifact@master
        with:
          name: RSD
          path: build/app/outputs/bundle/release/*.aab
          
      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
#         if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: 
            "build/app/outputs/bundle/release/*.aab"
