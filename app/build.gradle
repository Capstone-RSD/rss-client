plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id "com.google.protobuf"
}

android {
    namespace 'com.example.rss_client'
    compileSdk 32

    defaultConfig {
        applicationId "com.example.rss_client"
        minSdk 28
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-storage:20.1.0'
    implementation 'org.apache.kafka:kafka-clients:3.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // Protobuf
    // https://mvnrepository.com/artifact/com.google.api.grpc/proto-google-common-protos
    implementation group: 'com.google.api.grpc', name: 'proto-google-common-protos', version: '2.11.0'

    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-javalite
   // implementation group: 'com.google.protobuf', name: 'protobuf-javalite', version: '3.21.12'

//    protobuf files("$projectDir/src/main/proto/")
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.7.0'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
//                remove java
                java {
//                    option "lite"
                }
            }
            task.generateDescriptorSet = true

            // Allows to override the default for the descriptor set location
//            task.descriptorSetOptions.path = "${projectDir}/build/descriptors/${task.sourceSet.name}.dsc"

            // If true, the descriptor set will contain line number information
            // and comments. Default is false.
            task.descriptorSetOptions.includeSourceInfo = true

            // If true, the descriptor set will contain all transitive imports and
            // is therefore self-contained. Default is false.
            task.descriptorSetOptions.includeImports = true
//            task.plugins {
////                javalite { }
//            }
        }

        // (Android-only selectors)
        // Returns tasks for a flavor
//        ofFlavor('demo')
//        // Returns tasks for a buildType
//        ofBuildType('debug')
//        // Returns tasks for a variant
//        ofVariant('demoRelease')
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
}